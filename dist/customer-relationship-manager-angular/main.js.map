{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/Modules/agent/agent-routing.module.ts","./src/app/Modules/agent/agent.module.ts","./src/app/Modules/agent/components/main-agent-page/main-agent-page.component.ts","./src/app/Modules/agent/components/main-agent-page/main-agent-page.component.html","./src/app/Modules/agent/services/agent.service.ts","./src/app/Modules/client/client-routing.module.ts","./src/app/Modules/client/client.module.ts","./src/app/Modules/client/component/create-client/create-client.component.ts","./src/app/Modules/client/component/create-client/create-client.component.html","./src/app/Modules/client/component/get-clients/get-clients.component.ts","./src/app/Modules/client/component/get-clients/get-clients.component.html","./src/app/Modules/client/component/update-clients/update-clients.component.ts","./src/app/Modules/client/component/update-clients/update-clients.component.html","./src/app/Modules/client/services/client.service.ts","./src/app/Modules/manager/components/agent-chart/agent-chart.component.ts","./src/app/Modules/manager/components/agent-chart/agent-chart.component.html","./src/app/Modules/manager/manager-routing.module.ts","./src/app/Modules/manager/manager.module.ts","./src/app/Modules/manager/service/manager.service.ts","./src/app/Modules/observation/components/create-observation/create-observation.component.ts","./src/app/Modules/observation/components/create-observation/create-observation.component.html","./src/app/Modules/observation/components/get-observations/get-observations.component.ts","./src/app/Modules/observation/components/get-observations/get-observations.component.html","./src/app/Modules/observation/observation-routing.module.ts","./src/app/Modules/observation/observation.module.ts","./src/app/Modules/observation/services/observation.service.ts","./src/app/Modules/policy/components/create-policy/create-policy.component.ts","./src/app/Modules/policy/components/create-policy/create-policy.component.html","./src/app/Modules/policy/components/get-client-policy/get-client-policy.component.ts","./src/app/Modules/policy/components/get-client-policy/get-client-policy.component.html","./src/app/Modules/policy/components/update-policy/update-policy.component.ts","./src/app/Modules/policy/components/update-policy/update-policy.component.html","./src/app/Modules/policy/policy-routing.module.ts","./src/app/Modules/policy/policy.module.ts","./src/app/Modules/policy/services/policy.service.ts","./src/app/Modules/reminder/components/create-reminder/create-reminder.component.ts","./src/app/Modules/reminder/components/create-reminder/create-reminder.component.html","./src/app/Modules/reminder/components/expose-reminders/expose-reminders.component.ts","./src/app/Modules/reminder/components/expose-reminders/expose-reminders.component.html","./src/app/Modules/reminder/components/get-reminders/get-reminders.component.ts","./src/app/Modules/reminder/components/get-reminders/get-reminders.component.html","./src/app/Modules/reminder/reminder-routing.module.ts","./src/app/Modules/reminder/reminder.module.ts","./src/app/Modules/reminder/services/reminder.service.ts","./src/app/Services/auth.guard.ts","./src/app/Services/ignored-inteceptor.service.ts","./src/app/Services/jwttoken-service.service.ts","./src/app/Services/token-interceptor.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.service.ts","./src/app/login/register/register.component.ts","./src/app/login/register/register.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {MainAgentPageComponent} from './components/main-agent-page/main-agent-page.component';\nimport {AuthGuard} from '../../Services/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'agent', component: MainAgentPageComponent, canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AgentRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {AgentRoutingModule} from './agent-routing.module';\nimport {MainAgentPageComponent} from './components/main-agent-page/main-agent-page.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ChartsModule} from 'ng2-charts';\nimport {ManagerModule} from '../manager/manager.module';\n\n\n@NgModule({\n  declarations: [MainAgentPageComponent],\n  imports: [\n    CommonModule,\n    AgentRoutingModule,\n    NgbModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ChartsModule,\n    ManagerModule\n  ],\n  exports: [\n    MainAgentPageComponent\n  ]\n})\nexport class AgentModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ClientService} from '../../../client/services/client.service';\nimport {ClientType} from '../../../../Types/ClientType';\nimport {AgentService} from '../../services/agent.service';\nimport {AgentType} from '../../../../Types/AgentType';\nimport {Router} from '@angular/router';\nimport {LoginService} from '../../../../login/login.service';\nimport {NgForm} from '@angular/forms';\nimport {ChartDataSets, ChartType} from 'chart.js';\nimport {Label} from 'ng2-charts';\n\n@Component({\n  selector: 'app-main-agent-page',\n  templateUrl: './main-agent-page.component.html',\n  styleUrls: ['./main-agent-page.component.css']\n})\nexport class MainAgentPageComponent implements OnInit {\n  active = 'top';\n  uncheckedAgents: AgentType[];\n  achievements: Map<string, number>;\n  agentList: AgentType[];\n\n  componentVisibility;\n\n\n  constructor(private agentService: AgentService, private loginService: LoginService) {\n  }\n\n  ngOnInit(): void {\n    this.agentService.getUnchecked(localStorage.getItem('username')).subscribe(list => this.uncheckedAgents = list);\n    this.agentService.getAllAgents(localStorage.getItem('username')).subscribe(l => this.agentList = l);\n\n  }\n\n  gavePermission(agent: AgentType): void {\n    this.agentService.gavePermission(agent.username, 'true');\n  }\n\n  delete(agent: AgentType): void {\n    this.agentService.deleteAgent(agent.id);\n  }\n\n  logout(): void {\n    this.loginService.logout();\n  }\n\n  getData(data: NgForm): void {\n    this.componentVisibility = false;\n    this.agentService.getAchievements(data.value.agents, data.value.sinceDate, data.value.untilDate).subscribe(l => {\n      this.achievements = l;\n      this.componentVisibility = true;\n    });\n  }\n}\n","<div *ngFor=\"let agent of uncheckedAgents\">\n  <ngb-alert [dismissible]=\"false\"><strong>{{agent.username}}</strong> New agent registered,wait for your permission!!\n    <button class=\"btn btn-outline-success\" (click)=\"gavePermission(agent)\">Confirm</button>\n    <button class=\"btn btn-outline-success\" (click)=\"delete(agent)\">Delete</button>\n  </ngb-alert>\n</div>\n<button class=\"btn btn-outline-danger\" (click)=\"logout()\"> Logout</button>\n<div>\n  <form ngForm (ngSubmit)=\"getData(data)\" #data=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"agents\"></label>\n      <select id=\"agents\" name=\"agents\" ngModel >\n        <option *ngFor=\"let agent of agentList\" value=\"{{agent.id}}\">{{agent.username}}</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"sinceDate\"></label>\n      <input type=date name=\"sinceDate\" id=\"sinceDate\" ngModel=\"\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"untilDate\"></label>\n      <input type=date name=\"untilDate\" id=\"untilDate\" ngModel=\"\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-outline-success\"> Generate</button>\n  </form>\n</div>\n<app-agent-chart *ngIf=\"componentVisibility\" [achievements]=\"achievements\"></app-agent-chart>\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {AgentType} from '../../../Types/AgentType';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AgentService {\n\n  constructor(private http: HttpClient, private router: Router) {\n  }\n\n  getUnchecked(managerUsername: string): Observable<AgentType[]> {\n    const params = new HttpParams().set('manager', managerUsername);\n    return this.http.get<AgentType[]>('http://localhost:8080/agent', {params});\n  }\n\n  gavePermission(username: string, permission: string): void {\n    const params = new HttpParams().set('username', username).set('permission', permission);\n    this.http.get('http://localhost:8080/agent', {params}).subscribe();\n  }\n\n  deleteAgent(id: number): void {\n    this.http.delete('http://localhost:8080/agent/' + id).subscribe();\n  }\n\n  getAchievements(agentId: number, sinceDate: Date, untilDate: Date): Observable<Map<string, number>> {\n    const params = new HttpParams().set('agentId', agentId.toString())\n      .set('sinceDate', sinceDate.toString()).set('untilDate', untilDate.toString());\n    return this.http.get<Map<string, number>>('http://localhost:8080/client/agentAchievement', {params});\n  }\n\n  getAllAgents(manager: string): Observable<AgentType[]> {\n    const params = new HttpParams().set('manager', manager);\n    return this.http.get<AgentType[]>('http://localhost:8080/agent/getAll', {params});\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {GetClientsComponent} from './component/get-clients/get-clients.component';\nimport {UpdateClientsComponent} from './component/update-clients/update-clients.component';\nimport {AuthGuard} from '../../Services/auth.guard';\n\nconst routes: Routes = [\n  {path: 'client', component: GetClientsComponent, canActivate: [AuthGuard]},\n  {path: 'client/:id', component: UpdateClientsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClientRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {ClientRoutingModule} from './client-routing.module';\nimport {GetClientsComponent} from './component/get-clients/get-clients.component';\nimport {CreateClientComponent} from './component/create-client/create-client.component';\nimport {UpdateClientsComponent} from './component/update-clients/update-clients.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {ReminderModule} from '../reminder/reminder.module';\nimport {ObservationModule} from '../observation/observation.module';\nimport {TokenInterceptorService} from '../../Services/token-interceptor.service';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatBadgeModule} from '@angular/material/badge';\n\n\n@NgModule({\n  declarations: [GetClientsComponent, CreateClientComponent, UpdateClientsComponent],\n    imports: [\n        CommonModule,\n        ClientRoutingModule,\n        FormsModule,\n        HttpClientModule,\n        ReactiveFormsModule,\n        ReminderModule,\n        ObservationModule,\n        NgbModule,\n        MatTableModule,\n        MatBadgeModule\n    ],\n  exports: [\n    GetClientsComponent\n  ], providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptorService,\n    multi: true\n  }]\n})\nexport class ClientModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {ClientService} from '../../services/client.service';\nimport {ModalDismissReasons, NgbActiveModal, NgbModal} from '@ng-bootstrap/ng-bootstrap';\n\n\n@Component({\n  selector: 'app-create-client',\n  templateUrl: './create-client.component.html',\n  styleUrls: ['./create-client.component.css']\n})\nexport class CreateClientComponent implements OnInit {\n\n  constructor(private service: ClientService,\n              private modalService: NgbModal) {\n  }\n\n  closeResult = '';\n  cnpExist: boolean;\n  cnpField: string;\n\n  private static getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  public onSubmit(clientForm: NgForm): void {\n    this.service.checkCnp(clientForm.value.cnp).subscribe(data => {\n      this.cnpExist = data;\n      if (!this.cnpExist) {\n        this.service.createClient(localStorage.getItem('username'), clientForm.value.name, clientForm.value.cnp,\n          clientForm.value.phoneNumber, clientForm.value.emailAddress, clientForm.value.gdprStatus, clientForm.value.lead);\n        this.modalService.dismissAll();\n      } else {\n        this.cnpField = '';\n      }\n    });\n\n  }\n\n  open(content): void {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${CreateClientComponent.getDismissReason(reason)}`;\n    });\n  }\n\n}\n","<ng-template #content let-modal>\n  <form ngForm #client=\"ngForm\" [class.is-valid]=\"nameController.valid && cnpController.valid && phoneController.valid && emailController.valid\">\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Create Client</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <div class=\"input-group\">\n          <input ngModel=\"\" type=\"text\" id=\"name\" [class.is-invalid]=\"nameController.invalid && nameController.touched\" class=\"form-control\" placeholder=\"Name\" required=\"required\" pattern=\"[a-zA-Z ]+\" minlength=\"6\" name=\"name\" #nameController=\"ngModel\">\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"cnp\">CNP</label>\n        <div class=\"input-group\">\n          <input type=\"number\" ngModel=\"\" [(ngModel)]=\"cnpField\" [class.is-invalid]=\"cnpController.invalid && cnpController.touched && cnpExist\" id=\"cnp\" class=\"form-control\" required=\"required\" pattern=\"[0-9]{13}\" placeholder=\"CNP\" name=\"cnp\" #cnpController =\"ngModel\">\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"phoneNumber\">Phone Number</label>\n        <div class=\"input-group\">\n          <input ngModel=\"\" id=\"phoneNumber\" [class.is-invalid]=\"phoneController.invalid && phoneController.touched\" class=\"form-control\" required=\"required\" pattern=\"[0-9]{10}\" placeholder=\"Phone Number\" name=\"phoneNumber\" #phoneController=\"ngModel\">\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"emailAddress\">Email Address</label>\n        <div class=\"input-group\">\n          <input ngModel=\"\" id=\"emailAddress\" [class.is-invalid]=\"emailController.invalid && emailController.touched\" class=\"form-control\" required=\"required\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" placeholder=\"Email Address\" name=\"emailAddress\" #emailController=\"ngModel\">\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"gdprStatus\">Gdpr Status</label>\n          <input ngModel=\"\" id=\"gdprStatus\" class=\"form-control\" type=\"checkbox\" name=\"gdprStatus\">\n          <label for=\"lead\">Lead Status</label>\n          <input ngModel=\"\" id=\"lead\" class=\"form-control\" type=\"checkbox\" name=\"lead\">\n      </div>\n      <button type=\"button\" class=\"btn btn-outline-dark\" [class.disabled]=\"client.invalid\" (click)=\"onSubmit(client)\">Save</button>\n    </div>\n  </form>\n</ng-template>\n<button class=\"btn btn-md btn-outline-primary\" (click)=\"open(content)\">Add Client</button>\n\n\n","import {ChangeDetectorRef, Component, Input, OnInit} from '@angular/core';\nimport {ClientType} from '../../../../Types/ClientType';\nimport {ClientService} from '../../services/client.service';\nimport {NgForm} from '@angular/forms';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {UpdateClientsComponent} from '../update-clients/update-clients.component';\nimport {GetRemindersComponent} from '../../../reminder/components/get-reminders/get-reminders.component';\nimport {CreateReminderComponent} from '../../../reminder/components/create-reminder/create-reminder.component';\nimport {ReminderService} from '../../../reminder/services/reminder.service';\nimport {GetObservationsComponent} from '../../../observation/components/get-observations/get-observations.component';\nimport {LoginService} from '../../../../login/login.service';\n\n\n\n@Component({\n  selector: 'app-get-clients',\n  templateUrl: './get-clients.component.html',\n  styleUrls: ['./get-clients.component.css']\n})\nexport class GetClientsComponent implements OnInit {\n  list: ClientType[];\n  todayReminderList = [];\n  public isCollapsed = false;\n  displayedColumns = ['name', 'cnp', 'phoneNumber', 'emailAddress', 'gdpr', 'function'];\n\n\n\n  constructor(private service: ClientService,\n              private modalService: NgbModal,\n              private reminderService: ReminderService,\n              private changeDetectorRef: ChangeDetectorRef,\n              public loginService: LoginService) {\n    this.setList();\n\n  }\n\n\n  ngOnInit(): void {\n    this.getReminderNumber();\n  }\n\n\n  public find(searchResult: NgForm): void {\n    if (searchResult.value.searchName === '' && searchResult.value.searchCnp === '' && searchResult.value.searchNumber === '') {\n      this.setList();\n    } else {\n      this.service.find(localStorage.getItem('username'), searchResult.value.searchName,\n        searchResult.value.searchCnp, searchResult.value.searchNumber).subscribe(l => {\n        this.list = l;\n      });\n    }\n  }\n\n\n  editItem(clientType: ClientType): void {\n    const ref = this.modalService.open(UpdateClientsComponent, {centered: true});\n    ref.componentInstance.selectedClient = clientType;\n\n    ref.result.then((yes) => {\n      this.changeDetectorRef.detectChanges();\n    });\n  }\n\n  private setList(): void {\n    this.service.getClients(localStorage.getItem('username')).subscribe(l => this.list = l);\n    this.getReminderNumber();\n  }\n\n  getReminders(): void {\n    const ref = this.modalService.open(GetRemindersComponent, {centered: true, size: 'xl'});\n    ref.result.then((yes) => {\n      console.log('gata');\n    });\n  }\n\n  createReminder(clientId: number): void {\n    const ref = this.modalService.open(CreateReminderComponent, {centered: true, size: 'sm'});\n    ref.componentInstance.clientId = clientId;\n\n  }\n\n  getReminderNumber(): void {\n    this.reminderService.getTodayReminders().subscribe(reminderList => this.todayReminderList = reminderList);\n  }\n\n  openLog(clientId: number): void {\n    const ref = this.modalService.open(GetObservationsComponent, {centered: true});\n    ref.componentInstance.clientId = clientId;\n  }\n\n\n}\n","<nav class=\"d-flex justify-content-between navbar\">\n  <a class=\"navbar-brand\" href=\"#\">\n    Bootstrap\n  </a>\n  <form class=\"form-inline\" ngForm (ngSubmit)=\"find(searchResult)\" #searchResult=\"ngForm\">\n    <label>\n      <input class=\"form-control mr-sm-2\" ngModel=\"\" name=\"searchName\" type=\"text\" placeholder=\"Name\">\n    </label>\n    <label>\n      <input class=\"form-control mr-sm-2\" ngModel=\"\" name=\"searchCnp\" type=\"text\" placeholder=\"CNP\">\n    </label>\n    <label>\n      <input class=\"form-control mr-sm-2\" ngModel=\"\" name=\"searchNumber\" type=\"text\" placeholder=\"Policy Number\">\n    </label>\n    <button type=\"submit\" class=\"btn btn-outline-success my-2 my-sm-0\">Search</button>\n  </form>\n  <button class=\"btn btn-outline-danger btn-light\" (click)=\"loginService.logout()\">Logout</button>\n</nav>\n\n<div class=\"container-fluid\" id=\"client-page\">\n  <div class=\"row\">\n    <div class=\"col-2\" id=\"sideMenu\">\n\n    </div>\n    <div class=\"col-10\">\n      <div class=\"row justify-content-around\">\n        <div class=\"col-3\">\n          <app-create-client></app-create-client>\n        </div>\n        <div class=\"col-3\">\n          <button class=\"btn btn-md btn-outline-primary\" (click)=\"getReminders()\"> Reminder\n                        <span *ngIf=\"todayReminderList.length != 0\">\n                      <span class=\"notification-badge notification-badge--show\">\n                        <span aria-hidden=\"true\" class=\"badge badge-pill badge-danger\">{{todayReminderList.length}}</span>\n                      </span>\n                    </span>\n          </button>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"example-container mat-elevation-z8\">\n          <table class=\"clientsTable\" mat-table [dataSource]=\"list\">\n\n\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef> Name</th>\n              <td mat-cell *matCellDef=\"let client\"> {{client.name}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"cnp\">\n              <th mat-header-cell *matHeaderCellDef> CNP</th>\n              <td mat-cell *matCellDef=\"let client\"> {{client.cnp}} </td>\n            </ng-container>\n\n\n            <ng-container matColumnDef=\"phoneNumber\">\n              <th mat-header-cell *matHeaderCellDef> Phone Number</th>\n              <td mat-cell *matCellDef=\"let client\"> {{client.phoneNumber}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"emailAddress\">\n              <th mat-header-cell *matHeaderCellDef> Email Address</th>\n              <td mat-cell *matCellDef=\"let client\"> {{client.emailAddress}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"gdpr\">\n              <th mat-header-cell *matHeaderCellDef> GDPR</th>\n              <td mat-cell *matCellDef=\"let client\"> {{client.gdprStatus}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"function\">\n              <th mat-header-cell *matHeaderCellDef> Function</th>\n              <td mat-cell *matCellDef=\"let client\">\n\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"editItem(client)\">Edit</button>\n                <button type=\"button\" class=\"btn btn-warning\" (click)=\"createReminder(client.id)\">Reminder</button>\n                <button type=\"button\" class=\"btn btn-success\" routerLink=\"/policy/client/{{client.id}}\">Policy</button>\n                <button type=\"button\" class=\"btn btn-info\" (click)=\"openLog(client.id)\">Log</button>\n\n              </td>\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {ClientService} from '../../services/client.service';\nimport {ClientType} from '../../../../Types/ClientType';\nimport {ActivatedRoute} from '@angular/router';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-update-clients',\n\n  templateUrl: './update-clients.component.html',\n  styleUrls: ['./update-clients.component.css']\n})\nexport class UpdateClientsComponent implements OnInit {\n  id: string;\n  selectedClient: ClientType;\n  editForm: FormGroup;\n\n  constructor(private service: ClientService,\n              private route: ActivatedRoute,\n              private formBuilder: FormBuilder,\n              public modal: NgbActiveModal) {\n  }\n\n  ngOnInit(): void {\n    this.populateForm();\n  }\n\n\n  public onSubmit(): void {\n    this.service.updateClient(localStorage.getItem('username'), this.editForm.value);\n    this.modal.close();\n  }\n\n  private populateForm(): void {\n    this.editForm = this.formBuilder.group({\n      id: [this.selectedClient.id],\n      name: [this.selectedClient.name],\n      cnp: [this.selectedClient.cnp],\n      phoneNumber: [this.selectedClient.phoneNumber],\n      emailAddress: [this.selectedClient.emailAddress],\n      gdprStatus: [this.selectedClient.gdprStatus]\n    });\n  }\n\n}\n","\n<div class=\"modal-header\">\n  <h4 class=\"modal-title\" id=\"modal-basic-title\">Edit Client</h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=modal.close()>\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name</label>\n      <div class=\"input-group\">\n        <input formControlName=\"name\" id=\"name\" class=\"form-control\" placeholder=\"Name\" name=\"name\">\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"cnp\">CNP</label>\n      <div class=\"input-group\">\n        <input formControlName=\"cnp\" id=\"cnp\" class=\"form-control\" placeholder=\"CNP\" name=\"cnp\">\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"phoneNumber\">Phone Number</label>\n      <div class=\"input-group\">\n        <input formControlName=\"phoneNumber\" id=\"phoneNumber\" class=\"form-control\" placeholder=\"Phone Number\"\n               name=\"phoneNumber\">\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"emailAddress\">Email Address</label>\n      <div class=\"input-group\">\n        <input formControlName=\"emailAddress\" id=\"emailAddress\" class=\"form-control\"\n               placeholder=\"Email Address\" name=\"emailAddress\">\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"gdprStatus\">Gdpr Status</label>\n      <div class=\"input-group\">\n        <input formControlName=\"gdprStatus\" id=\"gdprStatus\" class=\"form-control\" type=\"checkbox\"\n               name=\"gdprStatus\">\n      </div>\n    </div>\n    <button class=\"btn btn-outline-dark\">Save</button>\n  </form>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {ClientType} from '../../../Types/ClientType';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getClients(username: string): Observable<ClientType[]> {\n    const params = new HttpParams().set('username', username);\n    return this.http.get<ClientType[]>('http://localhost:8080/client', {params});\n  }\n\n  public getById(id: string): Observable<ClientType> {\n\n    return this.http.get<ClientType>('http://localhost:8080/client/' + id);\n  }\n\n  public createClient(username: string, name: string, cnp: string,\n                      phoneNumber: string, emailAddress: string, gdprStatus: boolean, leadStatus: boolean): void {\n    console.log(name);\n    const params = new HttpParams().set('username', username);\n    this.http.post('http://localhost:8080/client', {\n      name,\n      cnp,\n      phoneNumber,\n      emailAddress,\n      gdprStatus,\n      leadStatus\n    }, {params}).subscribe();\n  }\n\n  public updateClient(username: string, client: ClientType): void {\n    const params = new HttpParams().set('username', username);\n    this.http.put('http://localhost:8080/client', client, {params}).subscribe();\n  }\n\n\n  public find(username: string, name: string, cnp: string, searchNumber: string): Observable<ClientType[]> {\n    const params = new HttpParams().set('username', username).set('name', name).set('cnp', cnp).set('number', searchNumber);\n    return this.http.get<ClientType[]>('http://localhost:8080/client', {params});\n  }\n\n  public checkCnp(cnp: string): Observable<boolean> {\n    const params = new HttpParams().set('cnp', cnp);\n    return this.http.get<boolean>('http://localhost:8080/client/checkCnp', {params});\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ManagerService} from '../../service/manager.service';\nimport {ChartDataSets, ChartType} from 'chart.js';\nimport {Color, Label} from 'ng2-charts';\n\n@Component({\n  selector: 'app-agent-chart',\n  templateUrl: './agent-chart.component.html',\n  styleUrls: ['./agent-chart.component.css']\n})\nexport class AgentChartComponent implements OnInit {\n  public chartType: ChartType = 'line';\n  public lineChartData: ChartDataSets[] = [{}];\n  public lineChartLabels: Label[] = [];\n  dataArray: number[];\n  labelArray: string[];\n  public lineChartColors: Color[] = [\n    { // grey\n      backgroundColor: 'rgba(148,159,177,0.2)',\n      borderColor: 'rgba(148,159,177,1)',\n      pointBackgroundColor: 'rgba(148,159,177,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n    }];\n  lineChartType = 'line';\n\n  @Input() achievements: Map<string, number>;\n\n  constructor(private service: ManagerService) {\n  }\n\n  ngOnInit(): void {\n    this.lineChartData.push({data: Object.values(this.achievements).reverse()});\n    this.lineChartLabels = Object.keys(this.achievements).reverse();\n  }\n\n\n}\n","<div class=\"chart\">\n  <canvas baseChart width=\"200\" height=\"200\"\n          [datasets] =\"lineChartData\"\n          [labels]=\"lineChartLabels\"\n          [colors]=\"lineChartColors\"\n          [chartType]=\"lineChartType\"\n  ></canvas>\n\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ManagerRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManagerRoutingModule } from './manager-routing.module';\nimport { AgentChartComponent } from './components/agent-chart/agent-chart.component';\nimport {ChartsModule} from 'ng2-charts';\n\n\n@NgModule({\n  declarations: [AgentChartComponent],\n    imports: [\n        CommonModule,\n        ManagerRoutingModule,\n        ChartsModule\n    ],\n  exports : [\n    AgentChartComponent\n  ]\n})\nexport class ManagerModule { }\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpParams} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManagerService {\n\n  constructor(private http: HttpClient) { }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ObservationService} from '../../services/observation.service';\nimport {FormControl, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-create-observation',\n  templateUrl: './create-observation.component.html',\n  styleUrls: ['./create-observation.component.css']\n})\nexport class CreateObservationComponent implements OnInit {\n  @Input() clientId: number;\n  receivedObservation = new FormGroup({\n    date: new FormControl(''),\n    message: new FormControl('')\n  });\n\n  constructor(private service: ObservationService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  public onSubmit(): void {\n    this.service.createWithClient(this.clientId.toString(), this.receivedObservation.value);\n  }\n\n}\n","<form [formGroup]=\"receivedObservation\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label for=\"date\">Date</label>\n    <div class=\"input-group\">\n      <input formControlName=\"date\" id=\"date\" class=\"form-control\" type=\"date\" placeholder=\"Date\" name=\"date\">\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"message\">Message</label>\n    <div class=\"input-group\">\n      <textarea formControlName=\"message\" id=\"message\" class=\"form-control\" type=\"text\" placeholder=\"Message\" name=\"message\">\n      </textarea>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-outline-dark\">Save</button>\n</form>\n","import {Component, OnInit} from '@angular/core';\nimport {ObservationService} from '../../services/observation.service';\nimport {ObservationType} from '../../../../Types/ObservationType';\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-get-observations',\n  templateUrl: './get-observations.component.html',\n  styleUrls: ['./get-observations.component.css']\n})\nexport class GetObservationsComponent implements OnInit {\n  clientId: number;\n  list: ObservationType[];\n\n  constructor(private service: ObservationService,\n              public modal: NgbActiveModal) {\n  }\n\n  ngOnInit(): void {\n    this.getObservations(this.clientId);\n  }\n\n  getObservations(clientId: number): void {\n    this.service.getObservations(clientId.toString()).subscribe(list => this.list = list);\n  }\n\n}\n","<div class=\"modal-dialog modal-dialog-scrollable mt-0 mb-1\">\n  <div class=\"modal-content\">\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Log</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=modal.close()>\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body overflow-auto\">\n      <div class=\"list-group\">\n        <div class=\"list-group-item list-group-item-action active m-1\" *ngFor=\" let observations of list\">\n          <div class=\"d-flex w-100 justify-content-between\">\n            <h5 class=\"mb-1\">{{observations.client.name}}</h5>\n            <small></small>\n          </div>\n          <p class=\"mb-1\">{{observations.message}}.</p>\n        </div>\n      </div>\n\n\n    </div>\n    <div class=\"container-fluid\">\n      <app-create-observation [clientId]=clientId></app-create-observation>\n    </div>\n  </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ObservationRoutingModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {ObservationRoutingModule} from './observation-routing.module';\nimport {CreateObservationComponent} from './components/create-observation/create-observation.component';\nimport {GetObservationsComponent} from './components/get-observations/get-observations.component';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n\n@NgModule({\n  declarations: [CreateObservationComponent, GetObservationsComponent],\n  imports: [\n    CommonModule,\n    ObservationRoutingModule,\n    ReactiveFormsModule\n  ],\n  exports: [GetObservationsComponent]\n})\nexport class ObservationModule {\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {ObservationType} from '../../../Types/ObservationType';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObservationService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getObservations(clientId: string): Observable<ObservationType[]> {\n    return this.http.get<ObservationType[]>('http://localhost:8080/observation/client/' + clientId);\n  }\n\n  public createWithClient(clientId: string, observation: ObservationType): void {\n    this.http.post('http://localhost:8080/observation/' + clientId, observation).subscribe();\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {PolicyService} from '../../services/policy.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {ModalDismissReasons, NgbModal} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-create-policy',\n  templateUrl: './create-policy.component.html',\n  styleUrls: ['./create-policy.component.css']\n})\nexport class CreatePolicyComponent implements OnInit {\n  closeResult = '';\n\n  constructor(private service: PolicyService,\n              private route: ActivatedRoute,\n              private modalService: NgbModal) {\n  }\n\n  private static getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  public onSubmit(policy: NgForm): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.service.createPolicy(id, policy.value.types, policy.value.subtype,\n      policy.value.number, policy.value.period, policy.value.startDate, policy.value.endDate, policy.value.fee);\n    location.reload();\n    this.modalService.dismissAll();\n  }\n\n  open(content): void {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${CreatePolicyComponent.getDismissReason(reason)}`;\n    });\n  }\n}\n","<ng-template #content let-modal>\n  <form ngForm (ngSubmit)=\"onSubmit(policy)\" #policy=\"ngForm\" [class.is-valid]=\"typeController.valid && subtypeController.valid && numberController.valid && periodController.valid && startDateController.valid && endDateController.valid && feeController.valid\" >\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Create Policy</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <mat-form-field class=\"form-group\" appearance=\"fill\">\n        <mat-label> Type </mat-label>\n        <label for=\"type\"></label>\n          <select ngModel=\"\" matNativeControl name=\"type\" id=\"type\" [class.is-invalid]=\"typeController.invalid && typeController.untouched\" required=\"required\" #typeController = \"ngModel\">\n            <option value=\"agent\"> PF </option>\n            <option value=\"manager\"> PJ </option>\n          </select>\n      </mat-form-field>\n      <mat-form-field class=\"form-group ml-5\" appearance=\"fill\">\n        <mat-label> Subtype </mat-label>\n        <label for=\"subtype\"></label>\n        <select ngModel=\"\" matNativeControl name=\"type\" id=\"subtype\" [class.is-invalid]=\"subtypeController.invalid && subtypeController.untouched\" required=\"required\" #subtypeController = \"ngModel\">\n          <option value=\"agent\"> Life </option>\n          <option value=\"manager\"> RCA </option>\n          <option value=\"manager\"> Cyber </option>\n        </select>\n      </mat-form-field>\n      <div class=\"form-group\">\n        <label for=\"number\">Number</label>\n        <div class=\"input-group\">\n          <input  ngModel=\"\" id=\"number\" class=\"form-control\" [class.is-invalid]=\"numberController.invalid && numberController.touched\" placeholder=\"Policy Number\" name=\"number\" required=\"required\" pattern=\"[0-9]*\" type=\"text\" #numberController = \"ngModel\">\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"period\">Period</label>\n        <div class=\"input-group\">\n          <input  ngModel=\"\"  id=\"period\" class=\"form-control\" [class.is-invalid]=\"periodController.invalid && numberController.touched\" required=\"required\" pattern=\"[0-9]{2}\" placeholder=\"Period\" name=\"period\" type=\"number\" #periodController = \"ngModel\">\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"startDare\">Start Date</label>\n        <div class=\"input-group\">\n          <input ngModel=\"\" id=\"startDare\" class=\"form-control\" required=\"required\" [class.is-invalid]=\"startDateController.invalid && startDateController.touched\" type=\"date\" name=\"startDate\" #startDateController = \"ngModel\">\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"endDate\">End Date</label>\n        <div class=\"input-group\">\n          <input ngModel=\"\" id=\"endDate\" class=\"form-control\" type=\"date\" required=\"required\" [class.is-invalid]=\"endDateController.invalid && endDateController.touched\"  name=\"endDate\" #endDateController = \"ngModel\">\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"fee\">Fee</label>\n        <div class=\"input-group\">\n          <input ngModel=\"\" id=\"fee\" class=\"form-control\" type=\"number\" required=\"required\" pattern=\"[0-9]*\" [class.is-invalid]=\"feeController.invalid && feeController.touched\" name=\"fee\" #feeController = \"ngModel\">\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-outline-dark\">Save</button>\n    </div>\n  </form>\n</ng-template>\n<button class=\"btn btn-md btn-outline-primary\" (click)=\"open(content)\">Add Policy</button>\n","import {Component, OnInit} from '@angular/core';\nimport {PolicyType} from '../../../../Types/PolicyType';\nimport {ActivatedRoute} from '@angular/router';\nimport {PolicyService} from '../../services/policy.service';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {UpdatePolicyComponent} from '../update-policy/update-policy.component';\nimport {IgnoredInteceptorService} from '../../../../Services/ignored-inteceptor.service';\n\n\n@Component({\n  selector: 'app-get-client-policy',\n  templateUrl: './get-client-policy.component.html',\n  styleUrls: ['./get-client-policy.component.css']\n})\nexport class GetClientPolicyComponent implements OnInit {\n  list: PolicyType[];\n  euroPrice: number;\n  displayedColumns = ['type', 'subtype', 'number', 'period', 'startDate', 'endDate', 'fee', 'euroFee', 'function'];\n\n  constructor(private service: PolicyService,\n              private route: ActivatedRoute,\n              private modalService: NgbModal,\n              private euroService: IgnoredInteceptorService) {\n    this.euroService.getEuroPrice().subscribe(price => this.euroPrice = price);\n  }\n\n  ngOnInit(): void {\n    this.setList();\n  }\n\n  editItem(policyType: PolicyType): void {\n    const ref = this.modalService.open(UpdatePolicyComponent, {centered: true});\n    ref.componentInstance.selectedPolicy = policyType;\n    ref.result.then((yes) => {\n      this.setList();\n    });\n  }\n\n  private setList(): void {\n    this.service.getPolicyByClient(this.route.snapshot.paramMap.get('id')).subscribe(l => {\n      this.list = l;\n    });\n  }\n\n\n}\n","<app-create-policy></app-create-policy>\n<div class=\"example-container mat-elevation-z8\">\n  <table class=\"clientsTable\" mat-table [dataSource]=\"list\">\n\n\n    <ng-container matColumnDef=\"type\">\n      <th mat-header-cell *matHeaderCellDef> Type </th>\n      <td mat-cell *matCellDef=\"let policy\"> {{policy.types}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"subtype\">\n      <th mat-header-cell *matHeaderCellDef> Subtype </th>\n      <td mat-cell *matCellDef=\"let policy\"> {{policy.subtype}} </td>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"number\">\n      <th mat-header-cell *matHeaderCellDef> Number </th>\n      <td mat-cell *matCellDef=\"let policy\"> {{policy.number}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"period\">\n      <th mat-header-cell *matHeaderCellDef> Period </th>\n      <td mat-cell *matCellDef=\"let policy\"> {{policy.period}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"startDate\">\n      <th mat-header-cell *matHeaderCellDef> Start Date </th>\n      <td mat-cell *matCellDef=\"let policy\"> {{policy.startDate}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"endDate\">\n      <th mat-header-cell *matHeaderCellDef> End Date</th>\n      <td mat-cell *matCellDef=\"let policy\"> {{policy.endDate}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"fee\">\n      <th mat-header-cell *matHeaderCellDef> Fee </th>\n      <td mat-cell *matCellDef=\"let policy\"> {{policy.fee}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"euroFee\">\n      <th mat-header-cell *matHeaderCellDef> GDPR</th>\n      <td mat-cell *matCellDef=\"let policy\"> {{(policy.fee / euroPrice).toFixed(2)}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"function\">\n      <th mat-header-cell *matHeaderCellDef> Function</th>\n      <td mat-cell *matCellDef=\"let policy\">\n        <button type=\"button\" class=\"btn btn-info\" (click)=\"editItem(policy)\">Edit</button>\n      </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {ActivatedRoute} from '@angular/router';\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\nimport {PolicyType} from '../../../../Types/PolicyType';\nimport {PolicyService} from '../../services/policy.service';\n\n@Component({\n  selector: 'app-update-policy',\n  templateUrl: './update-policy.component.html',\n  styleUrls: ['./update-policy.component.css']\n})\nexport class UpdatePolicyComponent implements OnInit {\n  id: string;\n  selectedPolicy: PolicyType;\n  editForm: FormGroup;\n\n  constructor(private service: PolicyService,\n              private route: ActivatedRoute,\n              private formBuilder: FormBuilder,\n              public modal: NgbActiveModal) {\n  }\n\n  ngOnInit(): void {\n\n    this.populateForm();\n  }\n\n\n  public onSubmit(): void {\n    this.service.updatePolicy(this.selectedPolicy.client.id.toString(), this.editForm.value);\n    this.modal.close();\n  }\n\n  private populateForm(): void {\n    this.editForm = this.formBuilder.group({\n      id: [this.selectedPolicy.id],\n      types: [this.selectedPolicy.types],\n      subtype: [this.selectedPolicy.subtype],\n      number: [this.selectedPolicy.number],\n      period: [this.selectedPolicy.period],\n      startDate: [this.selectedPolicy.startDate],\n      endDate: [this.selectedPolicy.endDate],\n      fee: [this.selectedPolicy.fee]\n    });\n  }\n\n}\n","\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Edit Policy</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=modal.close()>\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"types\">Type</label>\n        <div class=\"input-group\">\n          <input formControlName=\"types\" id=\"types\" class=\"form-control\" placeholder=\"Type\" name=\"types\" type=\"text\">\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"subtype\">Subtype</label>\n        <div class=\"input-group\">\n          <input formControlName=\"subtype\" id=\"subtype\" class=\"form-control\" placeholder=\"Subtype\" name=\"subtype\" type=\"text\">\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"number\">Number</label>\n        <div class=\"input-group\">\n          <input formControlName=\"number\" id=\"number\" class=\"form-control\" placeholder=\"Policy Number\" name=\"number\" type=\"text\">\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"period\">Period</label>\n        <div class=\"input-group\">\n          <input formControlName=\"period\" id=\"period\" class=\"form-control\" placeholder=\"Period\" name=\"period\" type=\"number\">\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"startDate\">Start Date</label>\n        <div class=\"input-group\">\n          <input formControlName=\"startDate\" id=\"startDate\" class=\"form-control\" type=\"date\" name=\"startDate\">\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"endDate\">End Date</label>\n        <div class=\"input-group\">\n          <input formControlName=\"endDate\" id=\"endDate\" class=\"form-control\" type=\"date\" name=\"endDate\">\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"fee\">Fee</label>\n        <div class=\"input-group\">\n          <input formControlName=\"fee\" id=\"fee\" class=\"form-control\" type=\"number\" name=\"fee\">\n        </div>\n      </div>\n      <button class=\"btn btn-outline-dark\">Save</button>\n    </form>\n  </div>\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {GetClientPolicyComponent} from './components/get-client-policy/get-client-policy.component';\n\nconst routes: Routes = [\n  {\n    path: 'policy/client/:id',\n    component: GetClientPolicyComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PolicyRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PolicyRoutingModule } from './policy-routing.module';\nimport { GetClientPolicyComponent } from './components/get-client-policy/get-client-policy.component';\nimport { CreatePolicyComponent } from './components/create-policy/create-policy.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { UpdatePolicyComponent } from './components/update-policy/update-policy.component';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatInputModule} from '@angular/material/input';\n\n\n@NgModule({\n  declarations: [GetClientPolicyComponent, CreatePolicyComponent, UpdatePolicyComponent],\n  imports: [\n    CommonModule,\n    PolicyRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule\n  ],\n  exports: [\n    GetClientPolicyComponent\n  ]\n})\nexport class PolicyModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {PolicyType} from '../../../Types/PolicyType';\nimport {ClientType} from '../../../Types/ClientType';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PolicyService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getPolicyByClient(id: string): Observable<PolicyType[]> {\n    return this.http.get<PolicyType[]>('http://localhost:8080/policy/client/' + id);\n  }\n\n  public createPolicy(clientId: string,\n                      types: string,\n                      subtype: string,\n                      policyNumber: string,\n                      period: number,\n                      startDate: Date,\n                      endDate: Date,\n                      fee: number): void {\n    this.http.post('http://localhost:8080/policy/create/' + clientId, {\n      types,\n      subtype,\n      period,\n      number: policyNumber,\n      startDate,\n      endDate,\n      fee\n    }).subscribe();\n  }\n\n  public updatePolicy(clientId: string, policy: PolicyType): void {\n    this.http.put('http://localhost:8080/policy/' + clientId, policy).subscribe();\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\nimport {NgForm} from '@angular/forms';\nimport {ReminderService} from '../../services/reminder.service';\n\n@Component({\n  selector: 'app-create-reminder',\n  templateUrl: './create-reminder.component.html',\n  styleUrls: ['./create-reminder.component.css']\n})\nexport class CreateReminderComponent implements OnInit {\n  clientId: number;\n\n\n  constructor(private service: ReminderService, public modal: NgbActiveModal) {\n  }\n\n\n  ngOnInit(): void {\n  }\n\n  public onSubmit(reminderForm: NgForm): void {\n    this.service.createReminder(this.clientId.toString(), reminderForm.value.date, reminderForm.value.message, true);\n    this.modal.close();\n  }\n\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title\" id=\"modal-basic-title\">Reminders</h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=modal.close()>\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <form ngForm (ngSubmit)=\"onSubmit(reminder)\" #reminder=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"date\">Date</label>\n      <div class=\"input-group\">\n        <input ngModel=\"\" id=\"date\" class=\"form-control\" type=\"date\" placeholder=\"Date\" name=\"date\">\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"message\">Message</label>\n      <div class=\"input-group\">\n        <input ngModel=\"\" id=\"message\" class=\"form-control\" type=\"text\" placeholder=\"Message\" name=\"message\">\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-outline-dark\">Save</button>\n  </form>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ReminderType} from '../../../../Types/ReminderType';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {ReminderService} from '../../services/reminder.service';\n\n@Component({\n  selector: 'app-expose-reminders',\n  templateUrl: './expose-reminders.component.html',\n  styleUrls: ['./expose-reminders.component.css']\n})\nexport class ExposeRemindersComponent implements OnInit {\n  @Input() list: ReminderType[];\n  editForm: FormGroup;\n  isCollapsed = true;\n  receivedReminder: ReminderType;\n\n  constructor(private service: ReminderService, private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    this.service.updateReminder(this.editForm.value, this.receivedReminder.client.id.toString());\n  }\n\n  setReminderStatus(reminder: ReminderType): void {\n    reminder.status = false;\n    this.service.updateReminder(reminder, reminder.client.id.toString());\n  }\n\n  onClick(reminder: ReminderType): void {\n    this.isCollapsed = !this.isCollapsed;\n    this.receivedReminder = reminder;\n    this.populateForm();\n  }\n\n  private populateForm(): void {\n    this.editForm = this.formBuilder.group({\n      id: [this.receivedReminder.id],\n      date: [this.receivedReminder.date],\n      message: [this.receivedReminder.message],\n      status: [this.receivedReminder.status]\n    });\n  }\n\n}\n","<div class=\"container border border-primary mt-4 mb-4\">\n  <div class=\"row\">\n    <div *ngFor=\"let reminder of list\" class=\"col-4 mt-2 mb-2\">\n      <div class=\"card\" style=\"width: 14rem;\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title align-items-center\">{{reminder.date}}</h5>\n          <p class=\"card-text\">\n            <span>{{reminder.client.name}}</span><br/>\n            <span>{{reminder.client.phoneNumber}}</span><br/>\n            <span>{{reminder.message}}</span><br/>\n          </p>\n          <button type=\"button\" class=\"btn btn-outline-primary mr-1\" (click)=\"setReminderStatus(reminder)\">Make it done</button>\n          <button type=\"button\" class=\"btn btn-outline-primary ml-1\" (click)=\"onClick(reminder)\"\n                  [attr.aria-expanded]=\"!isCollapsed\" aria-controls=\"collapseExample\">Edit</button>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n<div id=\"collapseExample\" [ngbCollapse]=\"isCollapsed\">\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"this.editForm\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <input formControlName=\"date\" type=\"date\" class=\"form-control\" placeholder=\"Date\">\n          </div>\n          <div class=\"col\">\n            <input formControlName=\"message\" type=\"text\" class=\"form-control\" placeholder=\"message\">\n          </div>\n          <div class=\"col\">\n            <button class=\"btn btn-outline-primary\" type=\"submit\">Edit</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ReminderType} from '../../../../Types/ReminderType';\nimport {Observable} from 'rxjs';\nimport {ReminderService} from '../../services/reminder.service';\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\nimport {FormBuilder, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-get-reminders',\n  templateUrl: './get-reminders.component.html',\n  styleUrls: ['./get-reminders.component.css']\n})\nexport class GetRemindersComponent implements OnInit {\n  upcomingList: ReminderType[];\n  todayList: ReminderType[];\n  passedList: ReminderType[];\n  editForm: FormGroup;\n  isCollapsed = true;\n\n  constructor(private service: ReminderService,\n              public modal: NgbActiveModal,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getUpcomingReminders();\n    this.getTodayReminders();\n    this.getPassedReminders();\n  }\n\n\n  public getUpcomingReminders(): void {\n    this.service.getUpcomingReminders().subscribe(result => this.upcomingList = result);\n  }\n\n  public getTodayReminders(): void {\n    this.service.getTodayReminders().subscribe(result => this.todayList = result);\n  }\n\n  public getPassedReminders(): void {\n    this.service.getPassedReminders().subscribe(result => this.passedList = result);\n  }\n\n\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title\" id=\"modal-basic-title\">Reminders</h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=modal.close()>\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <div class=\"bg-info\">\n    <app-expose-reminders [list]=upcomingList></app-expose-reminders>\n  </div>\n  <div class=\"bg-success\">\n  <app-expose-reminders [list]=todayList></app-expose-reminders>\n</div>\n<div class=\"bg-danger\">\n  <app-expose-reminders [list]=passedList></app-expose-reminders>\n</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReminderRoutingModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {ReminderRoutingModule} from './reminder-routing.module';\nimport {GetRemindersComponent} from './components/get-reminders/get-reminders.component';\nimport {CreateReminderComponent} from './components/create-reminder/create-reminder.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbCollapseModule} from '@ng-bootstrap/ng-bootstrap';\nimport { ExposeRemindersComponent } from './components/expose-reminders/expose-reminders.component';\n\n\n@NgModule({\n  declarations: [GetRemindersComponent, CreateReminderComponent, ExposeRemindersComponent],\n  imports: [\n    CommonModule,\n    ReminderRoutingModule,\n    FormsModule,\n    NgbCollapseModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    GetRemindersComponent\n  ]\n})\nexport class ReminderModule {\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {ReminderType} from '../../../Types/ReminderType';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReminderService {\n\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getReminders(): Observable<ReminderType[]> {\n    return this.http.get<ReminderType[]>('http://localhost:8080/reminder');\n  }\n\n  public getUpcomingReminders(): Observable<ReminderType[]> {\n    return this.http.get<ReminderType[]>('http://localhost:8080/reminder/getUpcoming');\n  }\n\n  public getTodayReminders(): Observable<ReminderType[]> {\n    return this.http.get<ReminderType[]>('http://localhost:8080/reminder/getToday');\n  }\n\n  public getPassedReminders(): Observable<ReminderType[]> {\n    return this.http.get<ReminderType[]>('http://localhost:8080/reminder/getPassed');\n  }\n\n  public createReminder(clientId: string, date: Date, message: string, status: boolean): void {\n    this.http.post('http://localhost:8080/reminder/client/' + clientId, {date, message, status}).subscribe();\n  }\n\n  public updateReminder(reminder: ReminderType, clientId: string): void {\n    this.http.put('http://localhost:8080/reminder/client/' + clientId, reminder).subscribe();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {LoginService} from '../login/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private loginService: LoginService,\n              private router: Router) {\n  }\n\n  canActivate(): boolean {\n    if (this.loginService.loggedId()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpBackend, HttpClient, HttpParams} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {ManagerType} from '../Types/ManagerType';\nimport {NgForm} from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgnoredInteceptorService {\n  private httpClient: HttpClient;\n\n  constructor(handler: HttpBackend) {\n    this.httpClient = new HttpClient(handler);\n  }\n\n  public getEuroPrice(): Observable<number> {\n    return this.httpClient.get<number>('http://www.infovalutar.ro/bnr/azi/eur');\n  }\n\n  getManagers(): Observable<ManagerType[]> {\n    return this.httpClient.get<ManagerType[]>('http://localhost:8080/manager/getAll');\n  }\n\n  register(newAgent: NgForm): void {\n    const params = new HttpParams().set('manager', newAgent.value.manager);\n    this.httpClient.post('http://localhost:8080/agent/register',\n      {\n        username: newAgent.value.username,\n        password: newAgent.value.password,\n        emailAddress: newAgent.value.emailAddress\n      }, {params}).subscribe();\n  }\n\n  userExist(username: string): Observable<boolean> {\n    const params = new HttpParams().set('username', username);\n    return this.httpClient.get<boolean>('http://localhost:8080/agent/check', {params});\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport jwt_decode from 'jwt-decode';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JWTTokenServiceService {\n\n  jwtToken: string;\n  decodedToken: { [key: string]: string };\n\n  constructor() {\n  }\n\n  setToken(token: string): any {\n    if (token) {\n      this.jwtToken = token;\n    }\n  }\n\n  decodeToken(): any {\n    if (this.jwtToken) {\n      this.decodedToken = jwt_decode(this.jwtToken);\n    }\n  }\n\n  getDecodeToken(): any {\n    return jwt_decode(this.jwtToken);\n  }\n\n  getUser(): any {\n    this.decodeToken();\n    return this.decodedToken ? this.decodedToken.displayname : null;\n  }\n\n  getEmailId(): any {\n    this.decodeToken();\n    return this.decodedToken ? this.decodedToken.email : null;\n  }\n\n  getExpiryTime(): any {\n    this.decodeToken();\n    return this.decodedToken ? this.decodedToken.exp : null;\n  }\n\n  isTokenExpired(): boolean {\n    const expiryTime: number = this.getExpiryTime();\n    if (expiryTime) {\n      return ((1000 * expiryTime) - (new Date()).getTime()) < 5000;\n    } else {\n      return false;\n    }\n  }\n}\n\n","import {Injectable, Injector} from '@angular/core';\nimport {HttpInterceptor} from '@angular/common/http';\nimport {LoginService} from '../login/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private injector: Injector) {\n  }\n\n  intercept(req, next): any {\n    if (this.injector.get(LoginService).loggedId()) {\n      const tokenizedRequest = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${this.injector.get(LoginService).getToken()}`,\n          username: localStorage.getItem('username')\n        }\n      });\n      return next.handle(tokenizedRequest);\n    } else {\n      const tokenizedRequest = req.clone({\n        setHeaders: {\n          authorization: 'Basic ' + btoa(localStorage.getItem('username') + ':' + localStorage.getItem('password'))\n        }\n\n      });\n      return next.handle(tokenizedRequest);\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {GetClientsComponent} from './Modules/client/component/get-clients/get-clients.component';\nimport {LoginComponent} from './login/login.component';\n\n\nconst routes: Routes = [\n  {\n  path: '', component: LoginComponent\n   } ,\n  {\n  path: 'login', component: LoginComponent\n   }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component} from '@angular/core';\nimport {LoginService} from './login/login.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'customer-relationship-manager-angular';\n  active = 'top';\n  user: any;\n\n  constructor(public service: LoginService) {\n  }\n\n}\n","\n<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {Injectable, NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {FormsModule} from '@angular/forms';\nimport {ClientModule} from './Modules/client/client.module';\nimport {PolicyModule} from './Modules/policy/policy.module';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {LoginComponent} from './login/login.component';\nimport {AgentModule} from './Modules/agent/agent.module';\nimport {AuthGuard} from './Services/auth.guard';\nimport {HTTP_INTERCEPTORS, HttpInterceptor} from '@angular/common/http';\nimport {TokenInterceptorService} from './Services/token-interceptor.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RegisterComponent } from './login/register/register.component';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatInputModule} from '@angular/material/input';\nimport { ChartsModule } from 'ng2-charts';\n\n@Injectable()\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ClientModule,\n    PolicyModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    AgentModule,\n    BrowserAnimationsModule,\n    MatSelectModule,\n    MatInputModule,\n    ChartsModule\n  ],\n  providers: [AuthGuard,{\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptorService,\n    multi: true\n  }],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {LoginService} from './login.service';\nimport {JWTTokenServiceService} from '../Services/jwttoken-service.service';\nimport {Router} from '@angular/router';\nimport {NgForm, NgModel} from '@angular/forms';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {RegisterComponent} from './register/register.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private service: LoginService, private jwt: JWTTokenServiceService, private router: Router, private modalService: NgbModal) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n\n  login(auth: NgForm): void {\n    localStorage.setItem('username', auth.value.username);\n    localStorage.setItem('password', auth.value.password);\n    if (auth.value.permission === 'agent') {\n      this.service.authenticationService(auth).subscribe(data => {\n        localStorage.setItem('token', data);\n        this.router.navigate(['/client']);\n      });\n    } else {\n      this.service.managerAuthenticationService(auth).subscribe(data => {\n        localStorage.setItem('token', data);\n        this.router.navigate(['/agent']);\n      });\n    }\n\n  }\n\n  register(): void {\n    const ref = this.modalService.open(RegisterComponent, {centered: true});\n  }\n\n\n}\n","<div class=\"py-5\">\n  <div class=\"row\">\n    <div class=\"col-md-6 mx-auto\">\n      <span class=\"anchor\" id=\"formLogin\"></span>\n\n      <!-- form card login -->\n      <div class=\"card rounded-0\">\n        <div class=\"card-header\">\n          <h3 class=\"mb-0\">Login</h3>\n        </div>\n        <div class=\"card-body\">\n          <form class=\"form\" ngForm #auth=\"ngForm\">\n            <div  class=\"form-group\">\n              <label for=\"username\">Username</label>\n              <input type=\"text\" class=\"form-control rounded-0\" ngModel=\"\" name=\"username\" required minlength=\"7\" id=\"username\" >\n            </div>\n            <div class=\"form-group\">\n              <label for=\"password\">Password</label>\n              <input type=\"password\" class=\"form-control rounded-0\" ngModel=\"\" name=\"password\" required id=\"password\">\n            </div>\n              <mat-form-field class=\"form-group\" appearance=\"fill\">\n                <mat-label> Login Option </mat-label>\n                  <mat-select ngModel=\"\" matNativeControl name=\"permission\" required>\n                    <mat-option value=\"agent\"> Agent</mat-option>\n                    <mat-option value=\"manager\"> Manager</mat-option>\n                  </mat-select>\n              </mat-form-field>\n            <button type=\"button\" (click)=\"login(auth)\" class=\"btn btn-success float-right\">Login</button>\n            <button type=\"button\" (click)=\"register()\" class=\"btn btn-success float-right\">Register</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {NgForm} from '@angular/forms';\nimport {Router} from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private http: HttpClient, private router: Router) {\n  }\n  authenticationService(request: NgForm): any {\n    return this.http.post('http://localhost:8080/agent/authenticate',\n      {username: request.value.username, password: request.value.password}, {responseType: 'text' as 'json'});\n  }\n\n  managerAuthenticationService(request: NgForm): any {\n    return this.http.post('http://localhost:8080/manager/authenticate',\n      {username: request.value.username, password: request.value.password}, {responseType: 'text' as 'json'});\n  }\n\n  loggedId(): boolean {\n    return !!localStorage.getItem('token');\n  }\n\n  getToken(): any {\n    return localStorage.getItem('token');\n  }\n\n  logout(): void {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    localStorage.removeItem('password');\n    localStorage.clear();\n    this.router.navigate(['/login']);\n  }\n\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\nimport {ManagerType} from '../../Types/ManagerType';\nimport {NgForm} from '@angular/forms';\nimport {IgnoredInteceptorService} from '../../Services/ignored-inteceptor.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  managerList: ManagerType[];\n  userExist: boolean;\n  username: string;\n\n  constructor(public modal: NgbActiveModal, private ignoreInterceptor: IgnoredInteceptorService) {\n    this.ignoreInterceptor.getManagers().subscribe(managers => this.managerList = managers);\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(newAgent: NgForm): void {\n    this.ignoreInterceptor.userExist(newAgent.value.username).subscribe(data => {\n      this.userExist = data;\n      if (!this.userExist) {\n        this.ignoreInterceptor.register(newAgent);\n      } else {\n        this.username = '';\n      }\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title\" id=\"modal-basic-title\">Register</h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.close()\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <form ngForm (ngSubmit)=\"onSubmit(newAgent)\" #newAgent=\"ngForm\" [class.is-invalid]=\"usernameControl.valid && passwordControl.valid && emailControl.valid && managerControl.valid\">\n    <div class=\"form-group\" >\n      <label for=\"username\">Username</label>\n      <div class=\"input-group\">\n        <input [class.is-invalid]=\"usernameControl.invalid && usernameControl.touched\" [(ngModel)]=\"username\" id=\"username\" class=\"form-control\" required minlength=\"6\" placeholder=\"Username\" name=\"username\" #usernameControl = \"ngModel\">\n        <h3 [class.visible]=\"userExist\" class=\"invalid-feedback\">\n                Username exist!!\n              </h3>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <div class=\"input-group\">\n        <input type=\"password\" [class.is-invalid]=\"passwordControl.invalid && passwordControl.touched\" ngModel=\"\" id=\"password\" class=\"form-control\" placeholder=\"Password\" required name=\"password\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" #passwordControl = \"ngModel\">\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"emailAddress\">Email Address</label>\n      <div class=\"input-group\">\n        <input ngModel=\"\" id=\"emailAddress\" [class.is-invalid]=\"emailControl.touched && emailControl.invalid\" class=\"form-control\" required placeholder=\"Email Address\" name=\"emailAddress\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" #emailControl = \"ngModel\">\n      </div>\n    </div>\n    <mat-form-field  class=\"form-group\" appearance=\"fill\" >\n      <mat-label> Managers</mat-label>\n      <label for=\"managers\"></label>\n      <select matNativeControl ngModel=\"\" id=\"managers\" name=\"manager\" required [class.is-invalid]=\"managerControl.untouched\" #managerControl=\"ngModel\">\n        <option *ngFor=\"let manager of managerList\" value=\"{{manager.username}}\">\n          {{manager.username}}\n        </option>\n      </select>\n    </mat-form-field>\n    <div class=\"form-group\">\n      <button type=\"submit\" class=\"btn btn-outline-dark\" [class.disabled]=\"newAgent.invalid\">Register</button>\n    </div>\n  </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}